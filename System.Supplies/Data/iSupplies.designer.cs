#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Supplies.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iSupplies")]
	public partial class iSuppliesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertFactorPayPrice(FactorPayPrice instance);
    partial void UpdateFactorPayPrice(FactorPayPrice instance);
    partial void DeleteFactorPayPrice(FactorPayPrice instance);
    partial void InsertHospital(Hospital instance);
    partial void UpdateHospital(Hospital instance);
    partial void DeleteHospital(Hospital instance);
    partial void InsertPayGroup(PayGroup instance);
    partial void UpdatePayGroup(PayGroup instance);
    partial void DeletePayGroup(PayGroup instance);
    partial void InsertFactorDetail(FactorDetail instance);
    partial void UpdateFactorDetail(FactorDetail instance);
    partial void DeleteFactorDetail(FactorDetail instance);
    #endregion
		
		public iSuppliesDataContext() : 
				base(global::System.Supplies.Properties.Settings.Default.iSuppliesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public iSuppliesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iSuppliesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iSuppliesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iSuppliesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<FactorPayPrice> FactorPayPrices
		{
			get
			{
				return this.GetTable<FactorPayPrice>();
			}
		}
		
		public System.Data.Linq.Table<Hospital> Hospitals
		{
			get
			{
				return this.GetTable<Hospital>();
			}
		}
		
		public System.Data.Linq.Table<PayGroup> PayGroups
		{
			get
			{
				return this.GetTable<PayGroup>();
			}
		}
		
		public System.Data.Linq.Table<FactorDetail> FactorDetails
		{
			get
			{
				return this.GetTable<FactorDetail>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Company.DeleteObject")]
		public int DeleteCompanyObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Company.DMLCompany")]
		public int DMLCompany([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Company.LoadData")]
		public ISingleResult<LoadDataResult> LoadCompanyData()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorDetail.AddNewFactor")]
		public int AddNewFactor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorDetail.DeleteObject")]
		public int DeleteFactorDetailObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorDetail.LoadData")]
		public ISingleResult<LoadDataResult1> LoadFactorDetailData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((ISingleResult<LoadDataResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorDetail.UpdateFactorData")]
		public int UpdateFactorData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorPayPrice.AddNewPayPrice")]
		public int AddNewPayPrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorPayPrice.DeleteObject")]
		public int DeleteFactorPayPriceObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorPayPrice.LoadData")]
		public ISingleResult<LoadDataResult2> LoadFactorPayPriceData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((ISingleResult<LoadDataResult2>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorPayPrice.MoveTo")]
		public int MoveFactorPayPriceTo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_FactorPayPrice.UpdatePayPriceData")]
		public int UpdatePayPriceData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Hospital.LoadData")]
		public ISingleResult<LoadDataResult3> LoadHospitalData()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadDataResult3>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_PayGroup.DeleteObject")]
		public int DeletePayGroupObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_PayGroup.DMLPayGroup")]
		public int DMLPayGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_PayGroup.LoadData")]
		public ISingleResult<LoadDataResult4> LoadPayGroupData()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadDataResult4>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Report.LoadParentReport")]
		public ISingleResult<LoadParentReportResult> LoadParentReport()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadParentReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Report.LoadReport")]
		public ISingleResult<LoadReportResult> LoadReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XMLARG", DbType="Xml")] System.Xml.Linq.XElement xMLARG)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xMLARG);
			return ((ISingleResult<LoadReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Report.SaveParentReport")]
		public int SaveParentReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Pkg_Report.SaveReport")]
		public int SaveReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlArg", DbType="Xml")] System.Xml.Linq.XElement xmlArg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlArg);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_;
		
		private int _Code_;
		
		private string _TITLE;
		
		private string _TELEPHONE;
		
		private string _MOBILE;
		
		private string _INTERFACE;
		
		private string _BANKNAME;
		
		private System.Nullable<long> _BANKACCOUNTNO;
		
		private System.Nullable<long> _IDCODE_;
		
		private System.Nullable<bool> _ISVISIBLE;
		
		private string _CREATE_BY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _MODIFY_BY;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private EntitySet<FactorDetail> _FactorDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Changing(long value);
    partial void OnID_Changed();
    partial void OnCode_Changing(int value);
    partial void OnCode_Changed();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnTELEPHONEChanging(string value);
    partial void OnTELEPHONEChanged();
    partial void OnMOBILEChanging(string value);
    partial void OnMOBILEChanged();
    partial void OnINTERFACEChanging(string value);
    partial void OnINTERFACEChanged();
    partial void OnBANKNAMEChanging(string value);
    partial void OnBANKNAMEChanged();
    partial void OnBANKACCOUNTNOChanging(System.Nullable<long> value);
    partial void OnBANKACCOUNTNOChanged();
    partial void OnIDCODE_Changing(System.Nullable<long> value);
    partial void OnIDCODE_Changed();
    partial void OnISVISIBLEChanging(System.Nullable<bool> value);
    partial void OnISVISIBLEChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMODIFY_BYChanging(string value);
    partial void OnMODIFY_BYChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    #endregion
		
		public Company()
		{
			this._FactorDetails = new EntitySet<FactorDetail>(new Action<FactorDetail>(this.attach_FactorDetails), new Action<FactorDetail>(this.detach_FactorDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this.OnID_Changing(value);
					this.SendPropertyChanging();
					this._ID_ = value;
					this.SendPropertyChanged("ID_");
					this.OnID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Code#", Storage="_Code_", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code_
		{
			get
			{
				return this._Code_;
			}
			set
			{
				if ((this._Code_ != value))
				{
					this.OnCode_Changing(value);
					this.SendPropertyChanging();
					this._Code_ = value;
					this.SendPropertyChanged("Code_");
					this.OnCode_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEPHONE", DbType="NVarChar(30)")]
		public string TELEPHONE
		{
			get
			{
				return this._TELEPHONE;
			}
			set
			{
				if ((this._TELEPHONE != value))
				{
					this.OnTELEPHONEChanging(value);
					this.SendPropertyChanging();
					this._TELEPHONE = value;
					this.SendPropertyChanged("TELEPHONE");
					this.OnTELEPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOBILE", DbType="NVarChar(30)")]
		public string MOBILE
		{
			get
			{
				return this._MOBILE;
			}
			set
			{
				if ((this._MOBILE != value))
				{
					this.OnMOBILEChanging(value);
					this.SendPropertyChanging();
					this._MOBILE = value;
					this.SendPropertyChanged("MOBILE");
					this.OnMOBILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTERFACE", DbType="NVarChar(255)")]
		public string INTERFACE
		{
			get
			{
				return this._INTERFACE;
			}
			set
			{
				if ((this._INTERFACE != value))
				{
					this.OnINTERFACEChanging(value);
					this.SendPropertyChanging();
					this._INTERFACE = value;
					this.SendPropertyChanged("INTERFACE");
					this.OnINTERFACEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKNAME", DbType="NVarChar(100)")]
		public string BANKNAME
		{
			get
			{
				return this._BANKNAME;
			}
			set
			{
				if ((this._BANKNAME != value))
				{
					this.OnBANKNAMEChanging(value);
					this.SendPropertyChanging();
					this._BANKNAME = value;
					this.SendPropertyChanged("BANKNAME");
					this.OnBANKNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKACCOUNTNO", DbType="BigInt")]
		public System.Nullable<long> BANKACCOUNTNO
		{
			get
			{
				return this._BANKACCOUNTNO;
			}
			set
			{
				if ((this._BANKACCOUNTNO != value))
				{
					this.OnBANKACCOUNTNOChanging(value);
					this.SendPropertyChanging();
					this._BANKACCOUNTNO = value;
					this.SendPropertyChanged("BANKACCOUNTNO");
					this.OnBANKACCOUNTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IDCODE#", Storage="_IDCODE_", DbType="BigInt")]
		public System.Nullable<long> IDCODE_
		{
			get
			{
				return this._IDCODE_;
			}
			set
			{
				if ((this._IDCODE_ != value))
				{
					this.OnIDCODE_Changing(value);
					this.SendPropertyChanging();
					this._IDCODE_ = value;
					this.SendPropertyChanged("IDCODE_");
					this.OnIDCODE_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISVISIBLE", DbType="Bit")]
		public System.Nullable<bool> ISVISIBLE
		{
			get
			{
				return this._ISVISIBLE;
			}
			set
			{
				if ((this._ISVISIBLE != value))
				{
					this.OnISVISIBLEChanging(value);
					this.SendPropertyChanging();
					this._ISVISIBLE = value;
					this.SendPropertyChanged("ISVISIBLE");
					this.OnISVISIBLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="VarChar(250)")]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_BY", DbType="VarChar(250)")]
		public string MODIFY_BY
		{
			get
			{
				return this._MODIFY_BY;
			}
			set
			{
				if ((this._MODIFY_BY != value))
				{
					this.OnMODIFY_BYChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_BY = value;
					this.SendPropertyChanged("MODIFY_BY");
					this.OnMODIFY_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_FactorDetail", Storage="_FactorDetails", ThisKey="ID_", OtherKey="CompanyID_")]
		public EntitySet<FactorDetail> FactorDetails
		{
			get
			{
				return this._FactorDetails;
			}
			set
			{
				this._FactorDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorDetails(FactorDetail entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_FactorDetails(FactorDetail entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_;
		
		private System.Nullable<int> _ParentID_;
		
		private string _Title;
		
		private string _Address;
		
		private bool _IsVisble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Changing(int value);
    partial void OnID_Changed();
    partial void OnParentID_Changing(System.Nullable<int> value);
    partial void OnParentID_Changed();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsVisbleChanging(bool value);
    partial void OnIsVisbleChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this.OnID_Changing(value);
					this.SendPropertyChanging();
					this._ID_ = value;
					this.SendPropertyChanged("ID_");
					this.OnID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ParentID#", Storage="_ParentID_", DbType="Int")]
		public System.Nullable<int> ParentID_
		{
			get
			{
				return this._ParentID_;
			}
			set
			{
				if ((this._ParentID_ != value))
				{
					this.OnParentID_Changing(value);
					this.SendPropertyChanging();
					this._ParentID_ = value;
					this.SendPropertyChanged("ParentID_");
					this.OnParentID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisble", DbType="Bit NOT NULL")]
		public bool IsVisble
		{
			get
			{
				return this._IsVisble;
			}
			set
			{
				if ((this._IsVisble != value))
				{
					this.OnIsVisbleChanging(value);
					this.SendPropertyChanging();
					this._IsVisble = value;
					this.SendPropertyChanged("IsVisble");
					this.OnIsVisbleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactorPayPrice")]
	public partial class FactorPayPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_;
		
		private long _FactorID_;
		
		private string _PayPriceDate;
		
		private System.Nullable<long> _PayPrice;
		
		private System.Nullable<bool> _IsVisible;
		
		private string _CREATE_BY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _MDOFIY_BY;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private EntityRef<FactorDetail> _FactorDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Changing(long value);
    partial void OnID_Changed();
    partial void OnFactorID_Changing(long value);
    partial void OnFactorID_Changed();
    partial void OnPayPriceDateChanging(string value);
    partial void OnPayPriceDateChanged();
    partial void OnPayPriceChanging(System.Nullable<long> value);
    partial void OnPayPriceChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMDOFIY_BYChanging(string value);
    partial void OnMDOFIY_BYChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    #endregion
		
		public FactorPayPrice()
		{
			this._FactorDetail = default(EntityRef<FactorDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this.OnID_Changing(value);
					this.SendPropertyChanging();
					this._ID_ = value;
					this.SendPropertyChanged("ID_");
					this.OnID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FactorID#", Storage="_FactorID_", DbType="BigInt NOT NULL")]
		public long FactorID_
		{
			get
			{
				return this._FactorID_;
			}
			set
			{
				if ((this._FactorID_ != value))
				{
					this.OnFactorID_Changing(value);
					this.SendPropertyChanging();
					this._FactorID_ = value;
					this.SendPropertyChanged("FactorID_");
					this.OnFactorID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPriceDate", DbType="VarChar(16)")]
		public string PayPriceDate
		{
			get
			{
				return this._PayPriceDate;
			}
			set
			{
				if ((this._PayPriceDate != value))
				{
					this.OnPayPriceDateChanging(value);
					this.SendPropertyChanging();
					this._PayPriceDate = value;
					this.SendPropertyChanged("PayPriceDate");
					this.OnPayPriceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPrice", DbType="BigInt")]
		public System.Nullable<long> PayPrice
		{
			get
			{
				return this._PayPrice;
			}
			set
			{
				if ((this._PayPrice != value))
				{
					this.OnPayPriceChanging(value);
					this.SendPropertyChanging();
					this._PayPrice = value;
					this.SendPropertyChanged("PayPrice");
					this.OnPayPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="VarChar(250)")]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDOFIY_BY", DbType="VarChar(250)")]
		public string MDOFIY_BY
		{
			get
			{
				return this._MDOFIY_BY;
			}
			set
			{
				if ((this._MDOFIY_BY != value))
				{
					this.OnMDOFIY_BYChanging(value);
					this.SendPropertyChanging();
					this._MDOFIY_BY = value;
					this.SendPropertyChanged("MDOFIY_BY");
					this.OnMDOFIY_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactorDetail_FactorPayPrice", Storage="_FactorDetail", ThisKey="FactorID_", OtherKey="ID_", IsForeignKey=true)]
		public FactorDetail FactorDetail
		{
			get
			{
				return this._FactorDetail.Entity;
			}
			set
			{
				FactorDetail previousValue = this._FactorDetail.Entity;
				if (((previousValue != value) 
							|| (this._FactorDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactorDetail.Entity = null;
						previousValue.FactorPayPrices.Remove(this);
					}
					this._FactorDetail.Entity = value;
					if ((value != null))
					{
						value.FactorPayPrices.Add(this);
						this._FactorID_ = value.ID_;
					}
					else
					{
						this._FactorID_ = default(long);
					}
					this.SendPropertyChanged("FactorDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospital")]
	public partial class Hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_;
		
		private int _Code_;
		
		private string _Title;
		
		private string _Address;
		
		private System.Nullable<bool> _IsVisible;
		
		private string _CREATE_BY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _MODIFY_BY;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private EntitySet<FactorDetail> _FactorDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Changing(long value);
    partial void OnID_Changed();
    partial void OnCode_Changing(int value);
    partial void OnCode_Changed();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMODIFY_BYChanging(string value);
    partial void OnMODIFY_BYChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    #endregion
		
		public Hospital()
		{
			this._FactorDetails = new EntitySet<FactorDetail>(new Action<FactorDetail>(this.attach_FactorDetails), new Action<FactorDetail>(this.detach_FactorDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this.OnID_Changing(value);
					this.SendPropertyChanging();
					this._ID_ = value;
					this.SendPropertyChanged("ID_");
					this.OnID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Code#", Storage="_Code_", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code_
		{
			get
			{
				return this._Code_;
			}
			set
			{
				if ((this._Code_ != value))
				{
					this.OnCode_Changing(value);
					this.SendPropertyChanging();
					this._Code_ = value;
					this.SendPropertyChanged("Code_");
					this.OnCode_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="VarChar(250)")]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_BY", DbType="VarChar(250)")]
		public string MODIFY_BY
		{
			get
			{
				return this._MODIFY_BY;
			}
			set
			{
				if ((this._MODIFY_BY != value))
				{
					this.OnMODIFY_BYChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_BY = value;
					this.SendPropertyChanged("MODIFY_BY");
					this.OnMODIFY_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_FactorDetail", Storage="_FactorDetails", ThisKey="ID_", OtherKey="HospitalID_")]
		public EntitySet<FactorDetail> FactorDetails
		{
			get
			{
				return this._FactorDetails;
			}
			set
			{
				this._FactorDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorDetails(FactorDetail entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = this;
		}
		
		private void detach_FactorDetails(FactorDetail entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayGroup")]
	public partial class PayGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_;
		
		private int _Code_;
		
		private string _TITLE;
		
		private bool _ISVISIBLE;
		
		private string _CREATE_BY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _MODIFY_BY;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private EntitySet<FactorDetail> _FactorDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Changing(long value);
    partial void OnID_Changed();
    partial void OnCode_Changing(int value);
    partial void OnCode_Changed();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnISVISIBLEChanging(bool value);
    partial void OnISVISIBLEChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMODIFY_BYChanging(string value);
    partial void OnMODIFY_BYChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    #endregion
		
		public PayGroup()
		{
			this._FactorDetails = new EntitySet<FactorDetail>(new Action<FactorDetail>(this.attach_FactorDetails), new Action<FactorDetail>(this.detach_FactorDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this.OnID_Changing(value);
					this.SendPropertyChanging();
					this._ID_ = value;
					this.SendPropertyChanged("ID_");
					this.OnID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Code#", Storage="_Code_", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code_
		{
			get
			{
				return this._Code_;
			}
			set
			{
				if ((this._Code_ != value))
				{
					this.OnCode_Changing(value);
					this.SendPropertyChanging();
					this._Code_ = value;
					this.SendPropertyChanged("Code_");
					this.OnCode_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISVISIBLE", DbType="Bit NOT NULL")]
		public bool ISVISIBLE
		{
			get
			{
				return this._ISVISIBLE;
			}
			set
			{
				if ((this._ISVISIBLE != value))
				{
					this.OnISVISIBLEChanging(value);
					this.SendPropertyChanging();
					this._ISVISIBLE = value;
					this.SendPropertyChanged("ISVISIBLE");
					this.OnISVISIBLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="VarChar(250)")]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_BY", DbType="VarChar(250)")]
		public string MODIFY_BY
		{
			get
			{
				return this._MODIFY_BY;
			}
			set
			{
				if ((this._MODIFY_BY != value))
				{
					this.OnMODIFY_BYChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_BY = value;
					this.SendPropertyChanged("MODIFY_BY");
					this.OnMODIFY_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayGroup_FactorDetail", Storage="_FactorDetails", ThisKey="ID_", OtherKey="PayGroupID_")]
		public EntitySet<FactorDetail> FactorDetails
		{
			get
			{
				return this._FactorDetails;
			}
			set
			{
				this._FactorDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorDetails(FactorDetail entity)
		{
			this.SendPropertyChanging();
			entity.PayGroup = this;
		}
		
		private void detach_FactorDetails(FactorDetail entity)
		{
			this.SendPropertyChanging();
			entity.PayGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactorDetail")]
	public partial class FactorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_;
		
		private long _HospitalID_;
		
		private long _CompanyID_;
		
		private long _PayGroupID_;
		
		private string _FactorNumber;
		
		private string _FactorDate;
		
		private string _Comment;
		
		private long _SumPrice;
		
		private System.Nullable<long> _SumPayPrice;
		
		private bool _ISVISIBLE;
		
		private string _CREATE_BY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _MODIFY_BY;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private EntitySet<FactorPayPrice> _FactorPayPrices;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Hospital> _Hospital;
		
		private EntityRef<PayGroup> _PayGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Changing(long value);
    partial void OnID_Changed();
    partial void OnHospitalID_Changing(long value);
    partial void OnHospitalID_Changed();
    partial void OnCompanyID_Changing(long value);
    partial void OnCompanyID_Changed();
    partial void OnPayGroupID_Changing(long value);
    partial void OnPayGroupID_Changed();
    partial void OnFactorNumberChanging(string value);
    partial void OnFactorNumberChanged();
    partial void OnFactorDateChanging(string value);
    partial void OnFactorDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnSumPriceChanging(long value);
    partial void OnSumPriceChanged();
    partial void OnSumPayPriceChanging(System.Nullable<long> value);
    partial void OnSumPayPriceChanged();
    partial void OnISVISIBLEChanging(bool value);
    partial void OnISVISIBLEChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMODIFY_BYChanging(string value);
    partial void OnMODIFY_BYChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    #endregion
		
		public FactorDetail()
		{
			this._FactorPayPrices = new EntitySet<FactorPayPrice>(new Action<FactorPayPrice>(this.attach_FactorPayPrices), new Action<FactorPayPrice>(this.detach_FactorPayPrices));
			this._Company = default(EntityRef<Company>);
			this._Hospital = default(EntityRef<Hospital>);
			this._PayGroup = default(EntityRef<PayGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this.OnID_Changing(value);
					this.SendPropertyChanging();
					this._ID_ = value;
					this.SendPropertyChanged("ID_");
					this.OnID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HospitalID#", Storage="_HospitalID_", DbType="BigInt NOT NULL")]
		public long HospitalID_
		{
			get
			{
				return this._HospitalID_;
			}
			set
			{
				if ((this._HospitalID_ != value))
				{
					this.OnHospitalID_Changing(value);
					this.SendPropertyChanging();
					this._HospitalID_ = value;
					this.SendPropertyChanged("HospitalID_");
					this.OnHospitalID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CompanyID#", Storage="_CompanyID_", DbType="BigInt NOT NULL")]
		public long CompanyID_
		{
			get
			{
				return this._CompanyID_;
			}
			set
			{
				if ((this._CompanyID_ != value))
				{
					this.OnCompanyID_Changing(value);
					this.SendPropertyChanging();
					this._CompanyID_ = value;
					this.SendPropertyChanged("CompanyID_");
					this.OnCompanyID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PayGroupID#", Storage="_PayGroupID_", DbType="BigInt NOT NULL")]
		public long PayGroupID_
		{
			get
			{
				return this._PayGroupID_;
			}
			set
			{
				if ((this._PayGroupID_ != value))
				{
					this.OnPayGroupID_Changing(value);
					this.SendPropertyChanging();
					this._PayGroupID_ = value;
					this.SendPropertyChanged("PayGroupID_");
					this.OnPayGroupID_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorNumber", DbType="VarChar(50)")]
		public string FactorNumber
		{
			get
			{
				return this._FactorNumber;
			}
			set
			{
				if ((this._FactorNumber != value))
				{
					this.OnFactorNumberChanging(value);
					this.SendPropertyChanging();
					this._FactorNumber = value;
					this.SendPropertyChanged("FactorNumber");
					this.OnFactorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorDate", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string FactorDate
		{
			get
			{
				return this._FactorDate;
			}
			set
			{
				if ((this._FactorDate != value))
				{
					this.OnFactorDateChanging(value);
					this.SendPropertyChanging();
					this._FactorDate = value;
					this.SendPropertyChanged("FactorDate");
					this.OnFactorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumPrice", DbType="BigInt NOT NULL")]
		public long SumPrice
		{
			get
			{
				return this._SumPrice;
			}
			set
			{
				if ((this._SumPrice != value))
				{
					this.OnSumPriceChanging(value);
					this.SendPropertyChanging();
					this._SumPrice = value;
					this.SendPropertyChanged("SumPrice");
					this.OnSumPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumPayPrice", DbType="BigInt")]
		public System.Nullable<long> SumPayPrice
		{
			get
			{
				return this._SumPayPrice;
			}
			set
			{
				if ((this._SumPayPrice != value))
				{
					this.OnSumPayPriceChanging(value);
					this.SendPropertyChanging();
					this._SumPayPrice = value;
					this.SendPropertyChanged("SumPayPrice");
					this.OnSumPayPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISVISIBLE", DbType="Bit NOT NULL")]
		public bool ISVISIBLE
		{
			get
			{
				return this._ISVISIBLE;
			}
			set
			{
				if ((this._ISVISIBLE != value))
				{
					this.OnISVISIBLEChanging(value);
					this.SendPropertyChanging();
					this._ISVISIBLE = value;
					this.SendPropertyChanged("ISVISIBLE");
					this.OnISVISIBLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="VarChar(250)")]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_BY", DbType="VarChar(250)")]
		public string MODIFY_BY
		{
			get
			{
				return this._MODIFY_BY;
			}
			set
			{
				if ((this._MODIFY_BY != value))
				{
					this.OnMODIFY_BYChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_BY = value;
					this.SendPropertyChanged("MODIFY_BY");
					this.OnMODIFY_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactorDetail_FactorPayPrice", Storage="_FactorPayPrices", ThisKey="ID_", OtherKey="FactorID_")]
		public EntitySet<FactorPayPrice> FactorPayPrices
		{
			get
			{
				return this._FactorPayPrices;
			}
			set
			{
				this._FactorPayPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_FactorDetail", Storage="_Company", ThisKey="CompanyID_", OtherKey="ID_", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.FactorDetails.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.FactorDetails.Add(this);
						this._CompanyID_ = value.ID_;
					}
					else
					{
						this._CompanyID_ = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_FactorDetail", Storage="_Hospital", ThisKey="HospitalID_", OtherKey="ID_", IsForeignKey=true)]
		public Hospital Hospital
		{
			get
			{
				return this._Hospital.Entity;
			}
			set
			{
				Hospital previousValue = this._Hospital.Entity;
				if (((previousValue != value) 
							|| (this._Hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hospital.Entity = null;
						previousValue.FactorDetails.Remove(this);
					}
					this._Hospital.Entity = value;
					if ((value != null))
					{
						value.FactorDetails.Add(this);
						this._HospitalID_ = value.ID_;
					}
					else
					{
						this._HospitalID_ = default(long);
					}
					this.SendPropertyChanged("Hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayGroup_FactorDetail", Storage="_PayGroup", ThisKey="PayGroupID_", OtherKey="ID_", IsForeignKey=true)]
		public PayGroup PayGroup
		{
			get
			{
				return this._PayGroup.Entity;
			}
			set
			{
				PayGroup previousValue = this._PayGroup.Entity;
				if (((previousValue != value) 
							|| (this._PayGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayGroup.Entity = null;
						previousValue.FactorDetails.Remove(this);
					}
					this._PayGroup.Entity = value;
					if ((value != null))
					{
						value.FactorDetails.Add(this);
						this._PayGroupID_ = value.ID_;
					}
					else
					{
						this._PayGroupID_ = default(long);
					}
					this.SendPropertyChanged("PayGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorPayPrices(FactorPayPrice entity)
		{
			this.SendPropertyChanging();
			entity.FactorDetail = this;
		}
		
		private void detach_FactorPayPrices(FactorPayPrice entity)
		{
			this.SendPropertyChanging();
			entity.FactorDetail = null;
		}
	}
	
	public partial class LoadDataResult
	{
		
		private long _ID_;
		
		private int _CODE_;
		
		private string _TITLE;
		
		private string _TELEPHONE;
		
		private string _MOBILE;
		
		private string _INTERFACE;
		
		private string _BANKNAME;
		
		private System.Nullable<long> _BANKACCOUNTNO;
		
		private System.Nullable<long> _IDCODE_;
		
		public LoadDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL")]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this._ID_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CODE#", Storage="_CODE_", DbType="Int NOT NULL")]
		public int CODE_
		{
			get
			{
				return this._CODE_;
			}
			set
			{
				if ((this._CODE_ != value))
				{
					this._CODE_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this._TITLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEPHONE", DbType="NVarChar(30)")]
		public string TELEPHONE
		{
			get
			{
				return this._TELEPHONE;
			}
			set
			{
				if ((this._TELEPHONE != value))
				{
					this._TELEPHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOBILE", DbType="NVarChar(30)")]
		public string MOBILE
		{
			get
			{
				return this._MOBILE;
			}
			set
			{
				if ((this._MOBILE != value))
				{
					this._MOBILE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTERFACE", DbType="NVarChar(255)")]
		public string INTERFACE
		{
			get
			{
				return this._INTERFACE;
			}
			set
			{
				if ((this._INTERFACE != value))
				{
					this._INTERFACE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKNAME", DbType="NVarChar(100)")]
		public string BANKNAME
		{
			get
			{
				return this._BANKNAME;
			}
			set
			{
				if ((this._BANKNAME != value))
				{
					this._BANKNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKACCOUNTNO", DbType="BigInt")]
		public System.Nullable<long> BANKACCOUNTNO
		{
			get
			{
				return this._BANKACCOUNTNO;
			}
			set
			{
				if ((this._BANKACCOUNTNO != value))
				{
					this._BANKACCOUNTNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IDCODE#", Storage="_IDCODE_", DbType="BigInt")]
		public System.Nullable<long> IDCODE_
		{
			get
			{
				return this._IDCODE_;
			}
			set
			{
				if ((this._IDCODE_ != value))
				{
					this._IDCODE_ = value;
				}
			}
		}
	}
	
	public partial class LoadDataResult1
	{
		
		private long _ID;
		
		private long _HospitalID;
		
		private long _CompanyID;
		
		private long _PayGroupID;
		
		private string _FactorDate;
		
		private string _Comment;
		
		private long _SumPrice;
		
		private System.Nullable<long> _SumPayPrice;
		
		private System.Nullable<long> _ReminderPrice;
		
		public LoadDataResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="BigInt NOT NULL")]
		public long HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this._HospitalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="BigInt NOT NULL")]
		public long CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayGroupID", DbType="BigInt NOT NULL")]
		public long PayGroupID
		{
			get
			{
				return this._PayGroupID;
			}
			set
			{
				if ((this._PayGroupID != value))
				{
					this._PayGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorDate", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string FactorDate
		{
			get
			{
				return this._FactorDate;
			}
			set
			{
				if ((this._FactorDate != value))
				{
					this._FactorDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumPrice", DbType="BigInt NOT NULL")]
		public long SumPrice
		{
			get
			{
				return this._SumPrice;
			}
			set
			{
				if ((this._SumPrice != value))
				{
					this._SumPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumPayPrice", DbType="BigInt")]
		public System.Nullable<long> SumPayPrice
		{
			get
			{
				return this._SumPayPrice;
			}
			set
			{
				if ((this._SumPayPrice != value))
				{
					this._SumPayPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderPrice", DbType="BigInt")]
		public System.Nullable<long> ReminderPrice
		{
			get
			{
				return this._ReminderPrice;
			}
			set
			{
				if ((this._ReminderPrice != value))
				{
					this._ReminderPrice = value;
				}
			}
		}
	}
	
	public partial class LoadDataResult2
	{
		
		private long _ID;
		
		private long _FactorID;
		
		private string _PayPriceDate;
		
		private System.Nullable<long> _PayPrice;
		
		public LoadDataResult2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorID", DbType="BigInt NOT NULL")]
		public long FactorID
		{
			get
			{
				return this._FactorID;
			}
			set
			{
				if ((this._FactorID != value))
				{
					this._FactorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPriceDate", DbType="VarChar(16)")]
		public string PayPriceDate
		{
			get
			{
				return this._PayPriceDate;
			}
			set
			{
				if ((this._PayPriceDate != value))
				{
					this._PayPriceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPrice", DbType="BigInt")]
		public System.Nullable<long> PayPrice
		{
			get
			{
				return this._PayPrice;
			}
			set
			{
				if ((this._PayPrice != value))
				{
					this._PayPrice = value;
				}
			}
		}
	}
	
	public partial class LoadDataResult3
	{
		
		private long _ID_;
		
		private int _Code_;
		
		private string _Title;
		
		private string _Address;
		
		private int _RowState_;
		
		public LoadDataResult3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL")]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this._ID_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Code#", Storage="_Code_", DbType="Int NOT NULL")]
		public int Code_
		{
			get
			{
				return this._Code_;
			}
			set
			{
				if ((this._Code_ != value))
				{
					this._Code_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RowState#", Storage="_RowState_", DbType="Int NOT NULL")]
		public int RowState_
		{
			get
			{
				return this._RowState_;
			}
			set
			{
				if ((this._RowState_ != value))
				{
					this._RowState_ = value;
				}
			}
		}
	}
	
	public partial class LoadDataResult4
	{
		
		private long _ID_;
		
		private int _CODE_;
		
		private string _TITLE;
		
		public LoadDataResult4()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID#", Storage="_ID_", DbType="BigInt NOT NULL")]
		public long ID_
		{
			get
			{
				return this._ID_;
			}
			set
			{
				if ((this._ID_ != value))
				{
					this._ID_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CODE#", Storage="_CODE_", DbType="Int NOT NULL")]
		public int CODE_
		{
			get
			{
				return this._CODE_;
			}
			set
			{
				if ((this._CODE_ != value))
				{
					this._CODE_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this._TITLE = value;
				}
			}
		}
	}
	
	public partial class LoadParentReportResult
	{
		
		private int _ID;
		
		private string _Title;
		
		public LoadParentReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class LoadReportResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Title;
		
		private string _Address;
		
		private int _RowState;
		
		public LoadReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowState", DbType="Int NOT NULL")]
		public int RowState
		{
			get
			{
				return this._RowState;
			}
			set
			{
				if ((this._RowState != value))
				{
					this._RowState = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
